#include<stdio.h>// 该程序是错误的  编译正确  但运算是错误的   下面对其错误进行总结 
int main()
{
	int integer, total = 0;
	printf( "%s", "Enter integer, -1 is to end: " );
	scanf( "%d",&integer );
	
	while( integer != -1 ){
		printf( "%s", "Enter integer, -1 is to end: " );
		scanf( "%d",&integer );
	    total = total + integer;//注意###  这里的 11行  应该放在第 9行	只有这样 运算才不会出错。 
	}
	 printf( "The total is %d\n", total );// 解释一下 为什么这样做 才是对的；（用 1 来说明） 如果不换的话 第一次输入的 1 会存储在第 6行中，然后进入循环，但又会再次提醒你输入一个数，
	 //                                      这个时候  第 6行的数还没来得及累加到 total 就被 10行中的新数替代 导致结果出错。
	 //举个例子： 假设输入的数是 1 -1，那么打印出的结果是 -1 ； 解释一下：第一次输的 1存储在第 6行中，并且可以进入循环，但随即又让你输入一个数 这个时候 -1就会被存储在第 10行中代替了第 6行
	 //           中的数 对total进行累加 得出结果为 -1，同时 第 10行中 integer的值 为 -1 ，退出while循环，得出结果 -1 。
	 //再举个例子：假设输入的数是 1 1 1 1 -1， 那么打印出的结果是 2 ；解释一下：同理可得  前两个 1 只有第二次输入的 1 被累加到 total（这时 total=1） 同时 integer的值为 1；再次进入循环 
	 //            对integer赋值为 1 ，同理  直到第四个 1 出现后进入循环 total的值为 3 ，然后进入新的循环 赋值为 -1 ，total为 2 ，当再次进入while判定时 integer为 -1 ，退出循环 ，total为 2 。 
 } //总结 ：不管是 条件语句还是循环语句  赋值表达式的顺序是  很重要的  ，一定要搞清楚 顺序   否则会引起运算错误。 
